service: redirect-serverless-6

custom:
  defaultRegion: us-east-1
  defaultEnvironmentGroup: dev
  region: ${opt:region, self:custom.defaultRegion}
  stage: ${opt:stage}
  objectPrefix: '${self:service}'

plugins:
  - serverless-plugin-cloudfront-lambda-edge

package:
  exclude:
    - 'node_modules/**'

provider:
  name: aws
  runtime: nodejs8.10
  region: ${self:custom.region}
  stage: ${self:custom.stage}
  environment:
    SLS_SVC_NAME: ${self:service}
    SLS_STAGE: ${self:custom.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: "arn:aws:s3:::${self:custom.objectPrefix}/*"
functions:
  redirect:
    name: '${self:custom.objectPrefix}-origin-request'
    handler: handler.redirect
    memorySize: 128
    timeout: 1
    lambdaAtEdge:
      distribution: 'WebsiteDistribution'
      eventType: 'origin-request'
  save:
    handler: handler.save
    environment:
      BUCKET: ${self:custom.objectPrefix}
resources:
   Resources:
      WebsiteBucket:
        Type: 'AWS::S3::Bucket'
        Properties:
          BucketName: '${self:custom.objectPrefix}'
          AccessControl: 'PublicRead'
          WebsiteConfiguration:
            IndexDocument: 'index.html'
            ErrorDocument: 'error.html'
      WebsiteDistribution:
        Type: 'AWS::CloudFront::Distribution'
        Properties:
          DistributionConfig:
            DefaultCacheBehavior:
              TargetOriginId: 'WebsiteBucketOrigin'
              ViewerProtocolPolicy: 'allow-all'
              DefaultTTL: 600
              MaxTTL: 600
              Compress: true
              ForwardedValues:
                  QueryString: false
                  Cookies:
                    Forward: 'none'
            DefaultRootObject: 'index.html'
            Enabled: true
            PriceClass: 'PriceClass_100'
            HttpVersion: 'http2'
            ViewerCertificate:
              CloudFrontDefaultCertificate: true
            Origins:
              -
                Id: 'WebsiteBucketOrigin'
                DomainName: { 'Fn::GetAtt': [ 'WebsiteBucket', 'DomainName' ] }
                S3OriginConfig: {}